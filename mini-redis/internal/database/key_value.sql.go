// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: key_value.sql

package database

import (
	"context"
	"time"
)

const createKeyValue = `-- name: CreateKeyValue :one
INSERT INTO kv(k,v,created_at)
VALUES($1,$2,$3)
RETURNING k, v, created_at
`

type CreateKeyValueParams struct {
	K         string
	V         string
	CreatedAt time.Time
}

func (q *Queries) CreateKeyValue(ctx context.Context, arg CreateKeyValueParams) (Kv, error) {
	row := q.db.QueryRowContext(ctx, createKeyValue, arg.K, arg.V, arg.CreatedAt)
	var i Kv
	err := row.Scan(&i.K, &i.V, &i.CreatedAt)
	return i, err
}

const getValueByKey = `-- name: GetValueByKey :one
SELECT v FROM kv WHERE k = $1
`

func (q *Queries) GetValueByKey(ctx context.Context, k string) (string, error) {
	row := q.db.QueryRowContext(ctx, getValueByKey, k)
	var v string
	err := row.Scan(&v)
	return v, err
}
